package com.ewaiter.controller;
import java.util.List;

import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.ewaiter.dto.Menu;
import com.ewaiter.service.MenuService;

@Controller
@RequestMapping("/user/menu")
public class MenuController {

	@Autowired
	HttpSession session;
	
	@Autowired
	MenuService mservice;
	
	
    @GetMapping("/addMenu")
	public String addMenu()
	{
		try
		{

			//if session is already present then directly redirected to welcome.jsp page
			//if not then redirected to add menu page.
			
			if(session.getAttribute("logged").equals(2))
			{
			return "addmenu";
			}
		}
		catch(Exception e) {System.out.println(e);}
		return "redirect:/user/";
	}

	
	//User addMenu post method.
	//User entity contains entered data of Menu item
	//Which is passed to service class method addMenurService.

	@PostMapping("/addMenu")
	public String addMenu(Menu menu)
	{
		boolean flag = false;
		try
		{
		flag = mservice.addMenuService(menu);
		}
		catch(Exception e)
		{e.getMessage();}
		
		//If data added to database then redirect to home page.
		
		if(flag)
			return "redirect:/user/";
		
		//Otherwise redirect to same register page for as try again to register .
		
		else
			return "/addmenu";
	}
	
    
		//Only admin and manager can get Menu Data.
	
		@GetMapping("/showMenu")
		public ModelAndView findAll(ModelAndView mv) {
			
			
			//If user ID is 1 or 2 then findAll method of Service class is called.
			//It returns list of all menus which is stored in li variable of type List.
			//It is added to ModelAndView object as name "listMenus" and returned to view (showmenu).
			
			
			if((session.getAttribute("logged").equals(2)))
			{
				mv.setViewName("showmenu");
		        List<Menu> li = mservice.findAll();
		        mv.addObject("listmenu",li);
		        System.out.println(li);
			}
			
			//else redirected to welcome page.
			
			else
			{
				mv.setViewName("welcomeemp");
			}


	        return mv;
			
	    }
		
		//When remove button inside showemp.jsp is pressed it will take ID as GET parameter which is stored in int id.
/*
	    @GetMapping("/remove/{id}")
	    public String removeMenu(@PathVariable("id") int id){
	    	
	    	//If ID is 1 then redirected to same page because user_type_id as 1 cannot be deleted as it is an admin itelf.
	    	//admin can add another admin but cannot delete itself.
	    	
			if((session.getAttribute("logged").equals(2)))
			{
						    		
		    	mservice.removeMenu(id);
		        return "redirect:/user/menu/showmenu";
				
			}
			return "redirect:/user/";
	    }

		//When Edit button inside "showemp.jsp" is pressed it will take ID as GET parameter which is stored in int id.
	    
	    @GetMapping("/editUser/{id}")
	    public ModelAndView editUser(@PathVariable("id") int id,ModelAndView mv)
	    {
	    	//Only if ADMIN or MANAGER is present allow the edit.
			if((session.getAttribute("logged").equals(1)||session.getAttribute("logged").equals(2)))
			{
		    	//View name of ModelAndView object "mv" is set to "edituser.jsp".
		    	mv.setViewName("editmenu");
		    		
		    	//getUser method of service class is called with id as parameter which returns a single user with id,finally "mv" object is returned
		    	//which is consumed by "edituser.jsp" which shows all data of that employee in editable form.
		    	User user = mservice.getMenu(id);
		    	mv.addObject("us",menu);		
			}
			else
			{
		    	mv.setViewName("welcomeemp");
			}
	        return mv;
	    }
	    
	    //The changes can made in form inside view "edituser" and when Update button is pressed request will come to POST edituser() method.
	    
	    @PostMapping("/editMenu/editMenu")
	    public  String editMenu(Menu menu)
	    {  	
	    	mservice.editmenu(menu);
	        return "redirect:/user/menu/showmenu";
	    }
	  */  
	
}

